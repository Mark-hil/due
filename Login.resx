<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Panel1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/2wBDAAkGBxISERUTERIVFRUXFhYXGBYWFRUVFxgZGBkXFhUYGBUY
        HSggGB4lGxUWITEhJyk3Li4uGB8zODMsNygtLiv/2wBDAQoKCg4NDhsQEBstJiAlLS0tLS8vLS0tLS0t
        LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS3/wAARCADhAOEDASIAAhEBAxEB/8QA
        HAABAAIDAQEBAAAAAAAAAAAAAAYHAQQFAwII/8QARBAAAQMCAwQHAwkGBAcAAAAAAQACAwQRBRIhBjFB
        UQcTIjJhcYGRobEUI1JicoLB0fAzQkOSwuE0U3OiFSRjk7Kz8f/EABoBAQACAwEAAAAAAAAAAAAAAAAE
        BQECAwb/xAA0EQACAQMBBQYEBgIDAAAAAAAAAQIDBBEhBRIxQVETYXGBkfChwdHhBhQiIzKxM3JCUmL/
        2gAMAwEAAhEDEQA/ALtREWpqEREAREQBERAEQrDH38+SyZMohcBvKXQBFlLoDCLKwgCIiwYCIiAIiIAi
        IgCIiAIiIAiIgCIiAIiIAiIgCLKLIMLVxFhyFzDZzRcHy4eK8cZxqClZnmeGjgN7j5DioDVbX1tc4xYf
        E4N3OeBuv9KQ6N8t6606M5rK4dXwNJVIxeHxLApaRrmh0lpHOF8xGljr2Qe6F9f8Mi4NI+y5zT7QVo7K
        mRsIhmt1sQDHW1BFrtIPEW0+6V21zZ0NIYe0bnSDx6x5+JIWW0Th/Gl9Sw/Fq3EWAaYp5RumJ+0xlvcA
        fevprZh+8x33XN+BK2lhAahilOpkDfBrQR6l1160spcDfeHFptzH6BXqSq5wrb7qZnw1TC0F7nNflIJa
        T3iD3hfS45LpCnKed1ZNZTUeJY6LwoqyOZgfE8PadxBXuufcZCIiwAiIgCIiAIiIAiIgCIiAIiIAsrCy
        hkKJbY7ZMpAWR2fOdA3eATuuBvPgvnbzav5IwRxdqZ+gA1LQdAQOJPALS2L2Q6s/K6ztVDu0A43EV/i/
        meCkwhGMe0qcOS6/Y4zlJy3Iceb6fc52BbGz1j/lOJOdY6thvZxHDOR3R9Ua+W5TqIxQMEcTGta0WDWA
        AD2L5mqi85Wf3P5L7FO2Nhc9wFhcudYNHib/AK0VJX2lXvJunbJYWjlyXclz96neFGNNZfH4nhgkpkkn
        efpMjHLsNufY57h6Lsri7JzMfSROYc2hzOBvmfc53X8XXPqu0p9KDhFQk8tcTDeeBhCV8SPAFybBaDJi
        5wJ52aPiVwuLqNJqPNmyWVk6QKL5a5fSlJ5WTUFReuwWCWV1NNG2SKQOmbfvROuA8NO8BxNx45lKFHsR
        ifHU9aR2JBHGHX7pBdYHkHEjXmuNxWnRg5wi21yXEKKloyF1mFVmESddTuMtN+9feBykA3j6w9ynuzm0
        UNZGHRmzrdpl9R+Y8V709VfsSDXdrx5ghQDanZyTD5BW0FxGDeSMa5L73AcWcxw8t0q0vKO0IZziXDPf
        0l8jjKDoPTh74ForC4+zGPMrIBI3Rw0e2+4/kV2FrJOLwzqmmsoIiLUBERAEREAREQBERAEREBlcvaDF
        mUsDpXEaaNHN3Afrgumqu2oldiOJMomE9VGSXkbg1v7Q38yGhd6FPflrwWr8PehpVlux048jY2CwV9TK
        cRqhclxMIP8A7Pwb5XU0qJTIcjdy+6ktjY2NgsAAABwA0ACxJNHTQullcGta0uc48uX9vFUt9Wnf3P5a
        GkV/L5RXz7zrSgqUMs8cWxKChgdLKbAcu893BrRxKpnaraueuf2zliHdiB7Pm76TvPQcF4bUbQSVs5kd
        cMGkbODW+PNx4lchev2ds6nbwWi8OnvqVNxdObxF6FxdEDyaJ4voJXADloNynhUK6JqUsocx/iPc4eW4
        Kaqpr/5ZeJY0v4LwOXUS5ncwDYDmfyXxkJdYG7jvP0RyC9XxkPs3edx5Dj717dmJu65PtJXluwdScp1H
        hJ6v5Lvx6Z6knOh6ueGADyAXsCuUbk69/lwaPzW7SyXGmoGl+asrS87Wbi1hclz09/U0ccGyoft/tE2k
        +T5oy9rpM7gDa4jt7dSDb6qmCqjpmlPWwM4Bjne02/pCubamqlWMXwOFWbjBtE+paiKrhbNA4Oa4XBHv
        BHAjdYr3pJ7jI/y14+BVJ7GbTPoJhqXQvPzjN/328nD36+CuioyyMbNE4OaQHBzTcFp1DgVU7W2fKxq/
        maC/2X/ZfVG1tXVaOHxIBiFO/B65ssQJppja3Bt9XR/iP7K0KadsjGvYbtcAQfArj4xhzK6lfC6wJGh4
        teO672qN9GOLP+coptHxE2B3ixs8eIvY+qtYVY3Vuq0eKXqn99Dmo9lPdfB8PEsFYWVhcTuERFgwEREA
        REQBERAERZWQczaPEfk9NJLxa02+0dG+9RLoqoLQSVbx25nOAJ35GEj3uufQL66W6sinjhb3pH3t5WA9
        7lJ4KZtPSxwt0DGNYPQa/Bb3FZW9nKo+eX5JfXBzS362OnzM0rc7y47h+gq56W8ezyNpI3dmOzpLcX72
        tPkCD5kclZL6hsFO+V9gGtc8+guvzzVVDpXvkebue5znE83G/u3ei0/DFlu01Unxf6n4y4en0Oe0K2Fu
        o8lt4VQPqJo4mDV7gP17/etQDkrY6MNleraKmZlnu7gO8D6XhdelvLhUafe+BXW9Lfn3InOFULYIWRN3
        MaG+fM+pW5dCVDNptqHMeYoCAR3n2vryHD1Xl5zUVmRZXFxTt4b0yYgC9+K1qph3jeBYeqrCqxSof35X
        HyNvcFNNj5WGAjO5xBu/MScpI3C/DRRJONeMqaWPr77yLa7TjXq7ii146HSiiLtG3A4u4u8vBdCJgaLA
        WVe4xXVUrrxslbE2+XK21/rG2uq1KPaGqhdrIXC4ux/99QbLjbRp0OWvX5Lu9s0qbZpxqOMoyx1wWjdV
        N0y/4iD/AE/6nK0KGqbLG17TcOF1V3TL+3g/0/6nK+sda8ffIm12nRbXQrxWd0S4/cOo5DewL4r8r9tg
        8r3HmeSrALcwjEHU88UzTYxva703OHq0keqvbugq1JxfHl4lZQqbk0y/YT1chHA/oKD7ZMNDiUNazRso
        s/xcywdf7TCP5Sp1XODmNkbuIBB8CLhcPpIoxNhr321iyzDwy97/AGkrxOxZdhdVLSX8c5X+svoy6uVv
        U99cSWxvDgCNxAI9V9Lg7C1fW0MLuIblP3dPhZd5WE4uMmnyMJ5WQiItTIREQBERAEREAWVhZQFcbXv6
        3GKOE3sC023jeXnT7oU0xM9po/XJQmoJO0Ud+DTbw+aJ/FTas1maPL4qHt/S1hBc9xesjFrrOT73/RHu
        lSr6vD3NGhkeyP0vmcP5WFUqVa3TS89TTC+hlcSPJht8SqqXrdlxUaHmyrvH+5g6ey1F11ZDGQSHPbce
        ANz7rr9EtA4Kh+jaMuxKG3DMfQAq9woG03+9juJdkv2w9txZcyhwKCI3ay7ib5ndo3Ou8rqLKrcEiUIy
        abWcHx1Q5D2BfDaZgJIaLkAHTfa9r+1aOJ47BAbPfd30G9p3s4LVg2tpXb3lv2mke8aLJtuo7oC8KmlZ
        ICHsa4HgQCsU1fFJ+zkY77LgVsIHFNYZ4UlIyJuWNoa3fYblVvTK09dAbadWdfJzr/EK2lBOlvDOspBK
        0HNE7h9F1gfgFItJKFaLfU5VoZpuK6FOLBX0i9RgpS79hqrrsLhJ1LGujO/+G4tF78cob7V2DCJaaSM7
        nMe0+Tmn81F+iOQuoJGnc2aQD7zWOPvcVLsJOhHiP17l4C9j2W1o45qS9HlF/Re9RWSJdENQXUj2H914
        PtFrf7VPVW3RQ89bVi+lxp9+QfBWSre6X7r8vijlb600YREUY6hERAEREAREQBZWEQFcVTcu0UZOmZpt
        6xEfEFTar0mafL4qDbYSsZi1JOHAhrmh+o7NiWm/KwcpbiGJwXaRNH6Pbw15qHt79VtCS5bj9Jam1rSm
        pSW6+PR8yK9NEZMFM7gJnA+sZt8CqpVx9JMkNRQO6uVjnscyRoDgSbGztPsucqf6p3I+1eq2ZWg6PFce
        qK28oVe0zuv0Z3uj6qEeIwkmwJLT94WHvIV4YhicUABldlB8CfgF+dImva4FoIINwd2o1V94FjkNTTse
        XNuWXe0kEi3euOSibSjHfjJNPK6ki0jOMGpRa8U0fA2gdK3/AJWnfJ9Z1mNB8eK1zR4hP+1lbCz6MY7V
        vO/4/kuHiLOsmvQRPDRe7ow5oJvvHJe8GO11PpNGXD67S0/zgfFV2CUSWjwWGma57WF7gCczu092m4X3
        LVkxDPvw+V32mMH4ryi20hLbuY8HkLEe261qzbUW+aiJ8XmwHLQb0Bp4xSSSgdVQGIg3Lxa9hcWFt3P0
        XPwrFasObHFI5xJsGu7Q9/lzXQgrMQq79X2WagkAMbblmNyfRfEGytYwtc3qw5pBBzngfJAdihxesMwg
        kiiD8uYm7h2dNdL815dJr3DDZraXyg+RIuvR8lsVb4xZT7HO/BdvFGxGJwmAMZFnAi4IOlrLaDxJPvNZ
        cD83IFLtpNkmseX0j+sYT3LEOb7d64H/AAeo/wAiT2L01K4p1I5TwUc6biy0uiWLLh8jj+9LIfY1rfwU
        swnc4+I9wv8AiovsjUxU2HxROJEli57cpuHPcXEHyvb0XUONRMgfY3dleQ3K7U2Nhu8l4q9hUq7TjJRe
        EpPOHjV6a8C5pVIRo6tepHOieM9ZVu4FwAP35CPcrHVfdF+WCAsluySR4AaQeAsNfMlWErS7/wAr98jS
        3x2a98zCIijHYIiIAiIgCIiAIiLIKaxq5r5WjL25Sy7twzSAX0Nx4+F13q7Z2sjIysgkDr3c1pszW+t9
        Rv4cl5bR4PmlmeBclxI8y7T3kKc4FUh0YbnzOj+bcbWu5osT+vFV9vOFaU0uTPQX164xp9lyik9M8it5
        qF5NhJC4h1yIo5XC4OoJGhF+C9qfD5nnLG6AvAB6t0cjHuy6/vCx5Lt41tdTRyOZHK1ktnFsZa68hbvI
        sLAb9SdbErqbH44ypgZN2byA5XXHate7QN4IGtikXmputacn1+ZHlf1tzP0+hGpsArGwule2mZlbctdm
        zWbrvFxc2tvXL2RxTq62O+okPVnwzWANvMe8qZbayiWMwNJzBplGgyvDdHNB8Ab/APxcHDdnHGohLdMk
        jXk+DdSsyqU6deEOv1O9K6c7Wr2nFrTly7iyg1LLKKcUJFNotl2uBkgbZ+8sG53iOR+K1dmtmcx6yoYQ
        B3Y3aE+Lhy5BTZFkHy1gAsBYDgvpYXNxnG4KVt5pA3S4bvcfJv4osvgMnJq22xSI84/6ZB8Vt7V1TBAW
        F7Q5xZlaTqe03cFCMa2wbLJ8ppmnNE21neBdY+wqGYfXST1kb5XFzi8G5N/Yplvaym8vTBFua8Ywx1TJ
        vZedZUww6Ty5Xf5bBnkHmBo3yJSqme3q4oSBPO5zYyf4bW9+Tz4D1PBc1uy0TszWSTFwdI0ylreq6xgz
        PzC+YDhmO8qLtHbELep2a489M49+0VtG0c472Pfvy6ntHjtI42zSs8XxAt9cjiR7F0coyhwLXMPdew5m
        n14HwOqi2B4A+ohne1p7Ib1ZJDWufftNudO7xXSqaSTDXxvIL4JGNE1jdrn657Dg4CxafBR6O20q3ZVH
        l5x8M+1xN3aNw393CJBhH+Ii+234hWOq7w1tqiKxuMzLEbiCQQR5ggqxFY3bTkmuhK2esQku8wiIoZOC
        IiAIiIAiIgCysLKyCN4szLneN41991zYWu+RsyB5Ja57sne7W834HeuvjEjWlzXaZh8QtvAKcMp4wDfs
        i58+Hpu9F5nZ9CVSdejNtNTz5Z+eCY6ySXMpqprDUvje8PdLAZGSh8cbnxluZnbIsYwb6FwINrXC6WCU
        EsdZCYhk6+ne57HxtjJLHxhjmBhLC8tdlu06garu7VbDQ9a2eIlr7ybrdvMALPcdS0X09F3thdnvk1LE
        x7zIWZshdqWXJFg48BwCtk1Kbp92qzwT558/eA5YipGri4LWROIs5rywgixs9pBFvVeW1eJyUUImhtmz
        tFiLgg3uF39pqeNzGOebEPFvHfmHsJUL6RXySUo6phcwPu9wF8tgbXtw8VAjbNbStaGcpat93f6YONav
        +zJribmz3SfDIA2qb1bvpNBLT5jeFOaCvjnZnhe17d12m+vI8ivzWuvgO0NTSOJhfYHe06tPovcXGzOd
        Mqad7r+s/Q11y8S2ipac2mnY08r3PsG5VLi3SHWzMyNLYgRqWCxP3idFEnvc4lziSTvJ4rhS2bUlrPQ6
        VL2EeBdeJ9ItFG27HmV3ANGnqSqgxrFH1UzpZCSXHQX0A4NHgFporK2sqdF5WrIla5lU04I6eDG7Jm/U
        v+vYvHAP8TD9ofitOOcsOZpsR7PVS/ZbYWpqPnn3gZq5htZ7za7bA90XtqVibjR35yfHl3mFF1Yxglqt
        D52iqZIqxj2A3iZEW6EjcXH0JeQV2BVUU8sJdG8PqATI1sjmMBFwOsANnXLdPCyqeczMeWPe/O1xae06
        +YGy6r8MrzHeQOawC5c92TTm477ea8Vc2P5qfaap66rv6+eGXStFSwnUWHjiv616EupMTbPLI2fI1oaR
        TwvzMga69gHBvhxPFbOK1sUVJLAHNcZJAY4mPMohFm3+c3bwSAPpKs466VrcrZXZddx+B3rMWITNNxI4
        +DjmHsco72dByTT0WNOWn31fXL6nR2U1Fre1edWnz6/1/SRb2yjrtoyeTR/LIWj3AKz1SPRD8pqKwukl
        e6GFhJabZQ5x7AAtp+8Vd6vHPejFdFgjwt3Qbi3nLz8EYREWhsEREAREQBERAFlYWVkyR7avDXTxEw6y
        x7hz4lvnyUMwDaqWmcY5W52a9nUOa7wHEX3t3/BTqRkkcocXvyuuTqXi/EWy6aAW4b1p1mzjKnJPYwT6
        OJAB1+s3cVHUU5uSWJEK6tqm8q1GWvNcmcxuPtl1ljzH/pvGngWus5vqF9x7WMhNurszUkF4L/utbfw3
        2HivCXZWpAADKeS3dJc8HQgjNmBvfKOPPmvuPZWp1A6mEWsMt3kggXa4ZQ1wNgCSFzVtFVHUS/V1Osr2
        4cNxU/7x78yOV2NVFbP2G79GRjXKONzxJ4nwHJT7AssMYhd3t7jbQk71Dtn5ZsPnkZUQhrCWkzby1l7E
        Dg4E23ePgpVhIjqSZY5Q8ZjYh5J3WN2cNQNDy8Vpd21xCanS448npnGeRpYUGs1KzzJ/A5+PdHlJUkvi
        +YkOt2DsE+Me6/iFA8V6O66G+RjZm84z2vVjre4lW6aeRndN/wBcllte4d5v4fFbUPxFUt8RuIyj4pte
        p3qWUJ6r4H5/qcMqIyRJTystvzRvsPvWt71q5vL2r9HjEG8QVn5XFy/2q1h+J7bGd6PqyM9nPk2fnqlw
        mpkNo6aZ3HSN1rc7kWt6qS4T0b1sv7VrYW8c5zO/lb+at52JN4AryNa93db+Ki1/xXS4QeX/AOU2dI7O
        S4nEwDYSjpCJHDrZL3D5Ldk/UYNB8fFfcO1bJKuSkY9pdYOYQRcjc9tvpNIPoQuwyje43efz/squ6UsB
        p6ecVUcgZI4WcGvIkDhq2VuXW/A3Vd2l3fOSmnFNaP8A5fbToTKcKVPQ8+lTZB8Tvl8I0JHWhu9rh3X+
        7VcDD9uHWDamISDi9pAJ8Sw6H0K28JxeuxOWnpaiV7oy62YCzSQCc0hb3jYG1/BSHaHokbmD6aR+S3bZ
        YF1+JaPHkrKjB0IRjSlrw9OpmfZzTjXhlLg+flwZoswqhq2CRsbHA8WjIRzBHAhcnGdiWZCaXMX3AEZ1
        zEkAAHgdVKMHwlsTRBAxxN91jmJO8uvu9VMKfDfkcElS9vWSsY54YDoLAnK3Ted1/HTxsK3ZqH6kt7uK
        q1nX7X9qUtxPn06a8z12L2fZh1GIyRmtnledAXW115DcvfZfaKKtEj4nNLWyOa0AjMWt7OcjgHEG3hZV
        PjWN1eJuEL5OqD79XS9zrXWJa1xYST96wVm9H+yjcOpRHoZX9qV3N3AA8huCrk8lrOOFmT1ZJ0RFk5BE
        RAEREAREQBZWEWQc3HnyNhcYi4P/AHQ1me55HQ2UUwmjrJZXOk6xpO8uMjBxtYNsOO7+ynqWXGpS33q2
        dY1N2O7giFVs9VOBtKLkcJJLXuOZ5D9XXzR7O1bd8uuv8SS3uPNTJYXP8nT5Z9TZV57u7p6FdY3hVS6S
        xa+QXGgzuaBftd7S+7ctWXYaZobPQyOikA1brGb8Rro4eatBYspNvvUHmLeOj4ehyq7tSKi158ysKfbi
        upLR11MZLaZw3q3nxsOw70su9RdIeHy995iPKVjh7xcKXSwtcLOaHDkQD8Vxa7ZCiluTCGnmwlp92iku
        VCp/OOPDh6HBRqLg8+P2PqHF6GS2WogJO4CRoPsvdbRFONS9n/cH5qLz9GVI4mz5R4dgge1uq1WdFNPf
        WVxHgxoPt/so72fYTeWl5xRnta/T4klm2hw+PU1MGmmkjXH2C5XHr+kqiZcRCSY/UYWj+Z1vas0vRpRs
        Ny6R3gS0f+IXeotmKSLuQMvzIzH3rrTpWlL+Kb8kjDdaXFpfEgj9oMVxA5aWM08Z3lou627WV4sPQXW1
        B0XNfFJ8omc6V7SMwN7E8S46uVjtaBoBYeGi+lvK4bW7BYXd9TMaSTzJ5ZS+J7C1cBL2xZnDdNSv6h9+
        BdHfK70WjUbRYpTMOWorMwIysmp2yXF9bvDSNB7Vetksou6Su26oox22tcT/AI2XXQllBZx04XYtNgxC
        rkAe2uqY7G7XP+TtLtLbrWbzG9X9lCzZN0z2q5Iq3Y/o+qI54Z5zHC2J2cQxjMXOs4Xe9282cdytNFhZ
        xg5yk5PLCIiGgREQBERAEREAREQBERAEREAREQGUWEWQZWERDIREWDAREQBZWEQBERAEREAREQBERAER
        EAREQBERAEREAREQBERAEREAREQBERAEREAREQBERAEREAREQBERAEREAREQBERAEREAREQBERAEREAR
        EQBERAEREAREQBERAEREAREQBERAEREAREQBERAEREAREQBERAEREAREQBERAEREAREQBERAEREAREQB
        ERAEREB//9k=
</value>
  </data>
</root>